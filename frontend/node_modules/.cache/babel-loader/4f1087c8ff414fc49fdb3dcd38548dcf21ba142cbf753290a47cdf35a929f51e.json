{"ast":null,"code":"// Handles fetching, creating, and updating listings (API calls)\nimport axios from'axios';import{getToken}from'./authService';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';// Add axios interceptor to include JWT token in all requests\naxios.interceptors.request.use(config=>{const token=getToken();if(token){config.headers=config.headers||{};config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});export const getListings=async filters=>{const url=filters?`${API_URL}/api/listing${filters}`:`${API_URL}/api/listing`;const response=await axios.get(url);return response.data;};export const getListing=async id=>{const response=await axios.get(`${API_URL}/api/listing/${id}`);return response.data;};export const createListing=async data=>{const response=await axios.post(`${API_URL}/api/listing`,data);return response.data;};export const updateListing=async(id,data)=>{const response=await axios.put(`${API_URL}/api/listing/${id}`,data);return response.data;};export const updateListingStatus=async(id,status)=>{const response=await axios.patch(`${API_URL}/api/listing/${id}/status`,{status});return response.data;};export const deleteListing=async id=>{await axios.delete(`${API_URL}/api/listing/${id}`);};export const uploadImages=async files=>{try{const formData=new FormData();files.forEach(file=>{formData.append('images',file);});const response=await axios.post(`${API_URL}/api/listing/upload`,formData,{headers:{'Content-Type':'multipart/form-data'}});if(!response.data.urls||!Array.isArray(response.data.urls)){throw new Error('Invalid response format from server');}return response.data.urls;}catch(error){console.error('Error uploading images:',error);throw error;}};export const getCategories=async()=>{const response=await axios.get(`${API_URL}/api/listing/categories`);return response.data;};export const getUserListings=async userId=>{const response=await axios.get(`${API_URL}/api/listing/user?user_id=${userId}`);return response.data;};export const requestToBuy=async listingId=>{try{const response=await axios.post(`${API_URL}/api/listing/${listingId}/notify`);return response.data;}catch(error){console.error('Error sending notification:',error);throw error;}};export const getUserPurchases=async()=>{const response=await axios.get(`${API_URL}/api/listing/purchases`);return response.data;};","map":{"version":3,"names":["axios","getToken","API_URL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject","getListings","filters","url","response","get","data","getListing","id","createListing","post","updateListing","put","updateListingStatus","status","patch","deleteListing","delete","uploadImages","files","formData","FormData","forEach","file","append","urls","Array","isArray","Error","console","getCategories","getUserListings","userId","requestToBuy","listingId","getUserPurchases"],"sources":["/Users/angel/Documents/Princeton/COS 333/tigerpop.github.io-1/frontend/src/services/listingService.ts"],"sourcesContent":["// Handles fetching, creating, and updating listings (API calls)\n\nimport axios, { InternalAxiosRequestConfig } from 'axios';\nimport { getToken } from './authService';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Add axios interceptor to include JWT token in all requests\naxios.interceptors.request.use(\n  (config: InternalAxiosRequestConfig) => {\n    const token = getToken();\n    if (token) {\n      config.headers = config.headers || {};\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport interface Listing {\n  id: number;\n  title: string;\n  description: string;\n  price: number;\n  category: string;\n  status: string;\n  user_id: number;\n  user_netid: string;\n  created_at: string;\n  images: string[];\n}\n\nexport interface CreateListingData {\n  title: string;\n  description: string;\n  price: number;\n  category: string;\n  images: string[];\n  user_id: number;\n}\n\nexport interface ListingFilters {\n  max_price?: number;\n  min_price?: number;\n  category?: string;\n  condition?: string;\n  search?: string;\n  include_sold?: boolean;\n}\n\nexport const getListings = async (filters?: string): Promise<Listing[]> => {\n  const url = filters ? `${API_URL}/api/listing${filters}` : `${API_URL}/api/listing`;\n  const response = await axios.get<Listing[]>(url);\n  return response.data;\n};\n\nexport const getListing = async (id: number): Promise<Listing> => {\n  const response = await axios.get<Listing>(`${API_URL}/api/listing/${id}`);\n  return response.data;\n};\n\nexport const createListing = async (data: CreateListingData): Promise<Listing> => {\n  const response = await axios.post<Listing>(`${API_URL}/api/listing`, data);\n  return response.data;\n};\n\nexport const updateListing = async (id: number, data: Partial<Listing>): Promise<Listing> => {\n  const response = await axios.put<Listing>(`${API_URL}/api/listing/${id}`, data);\n  return response.data;\n};\n\nexport const updateListingStatus = async (id: number, status: 'available' | 'sold'): Promise<Listing> => {\n  const response = await axios.patch<Listing>(`${API_URL}/api/listing/${id}/status`, { status });\n  return response.data;\n};\n\nexport const deleteListing = async (id: number): Promise<void> => {\n  await axios.delete(`${API_URL}/api/listing/${id}`);\n};\n\nexport const uploadImages = async (files: File[]): Promise<string[]> => {\n  try {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('images', file);\n    });\n\n    const response = await axios.post<{ urls: string[] }>(`${API_URL}/api/listing/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    if (!response.data.urls || !Array.isArray(response.data.urls)) {\n      throw new Error('Invalid response format from server');\n    }\n\n    return response.data.urls;\n  } catch (error) {\n    console.error('Error uploading images:', error);\n    throw error;\n  }\n};\n\nexport const getCategories = async (): Promise<string[]> => {\n  const response = await axios.get<string[]>(`${API_URL}/api/listing/categories`);\n  return response.data;\n};\n\nexport const getUserListings = async (userId: string): Promise<Listing[]> => {\n  const response = await axios.get<Listing[]>(`${API_URL}/api/listing/user?user_id=${userId}`);\n  return response.data;\n};\n\nexport const requestToBuy = async (listingId: number): Promise<any> => {\n  try {\n    const response = await axios.post(`${API_URL}/api/listing/${listingId}/notify`);\n    return response.data;\n  } catch (error) {\n    console.error('Error sending notification:', error);\n    throw error;\n  }\n};\n\nexport const getUserPurchases = async (): Promise<Listing[]> => {\n  const response = await axios.get<Listing[]>(`${API_URL}/api/listing/purchases`);\n  return response.data;\n};\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}