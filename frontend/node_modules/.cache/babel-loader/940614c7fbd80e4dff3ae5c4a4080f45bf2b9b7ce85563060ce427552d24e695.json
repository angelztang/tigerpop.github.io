{"ast":null,"code":"import { API_URL } from '../config';\nexport const login = () => {\n  // Check if we already have a token\n  const token = localStorage.getItem('token');\n  if (token) {\n    window.location.href = '/dashboard';\n    return;\n  }\n\n  // Construct the final redirect URL (where we want to end up after CAS)\n  const finalRedirectUrl = `${window.location.origin}/dashboard`;\n\n  // Construct the service URL for CAS (our backend endpoint that will handle the ticket)\n  const serviceUrl = `${API_URL}/api/auth/cas/login?redirect_uri=${encodeURIComponent(finalRedirectUrl)}`;\n\n  // Redirect to CAS login with our service URL\n  window.location.href = `https://fed.princeton.edu/cas/login?service=${encodeURIComponent(serviceUrl)}`;\n};\nexport const handleCasCallback = token => {\n  // Store the token\n  localStorage.setItem('token', token);\n\n  // Decode the JWT token to get user info\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  localStorage.setItem('user_id', payload.sub);\n  localStorage.setItem('username', payload.username);\n  localStorage.setItem('netid', payload.netid);\n  return {\n    access_token: token,\n    user_id: payload.sub,\n    username: payload.username,\n    netid: payload.netid\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user_id');\n  localStorage.removeItem('username');\n  localStorage.removeItem('netid');\n  window.location.href = `${API_URL}/api/auth/cas/logout?redirect_uri=${encodeURIComponent(window.location.origin)}`;\n};\nexport const getToken = () => localStorage.getItem('token');\nexport const getUserId = () => localStorage.getItem('user_id');\nexport const getUsername = () => localStorage.getItem('username');\nexport const getNetId = () => localStorage.getItem('netid');\nexport const isAuthenticated = () => !!getToken();\nexport const signup = async data => {\n  const response = await fetch(`${API_URL}/api/auth/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Signup failed');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","login","token","localStorage","getItem","window","location","href","finalRedirectUrl","origin","serviceUrl","encodeURIComponent","handleCasCallback","setItem","payload","JSON","parse","atob","split","sub","username","netid","access_token","user_id","logout","removeItem","getToken","getUserId","getUsername","getNetId","isAuthenticated","signup","data","response","fetch","method","headers","body","stringify","ok","Error","json"],"sources":["/Users/hannahchoi/tigerpop.github.io/frontend/src/services/authService.ts"],"sourcesContent":["import { API_URL } from '../config';\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\nexport interface SignupData {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n  user_id: number;\n  username: string;\n  netid: string;\n}\n\nexport const login = () => {\n  // Check if we already have a token\n  const token = localStorage.getItem('token');\n  if (token) {\n    window.location.href = '/dashboard';\n    return;\n  }\n\n  // Construct the final redirect URL (where we want to end up after CAS)\n  const finalRedirectUrl = `${window.location.origin}/dashboard`;\n  \n  // Construct the service URL for CAS (our backend endpoint that will handle the ticket)\n  const serviceUrl = `${API_URL}/api/auth/cas/login?redirect_uri=${encodeURIComponent(finalRedirectUrl)}`;\n  \n  // Redirect to CAS login with our service URL\n  window.location.href = `https://fed.princeton.edu/cas/login?service=${encodeURIComponent(serviceUrl)}`;\n};\n\nexport const handleCasCallback = (token: string): AuthResponse => {\n  // Store the token\n  localStorage.setItem('token', token);\n  \n  // Decode the JWT token to get user info\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  localStorage.setItem('user_id', payload.sub);\n  localStorage.setItem('username', payload.username);\n  localStorage.setItem('netid', payload.netid);\n  \n  return {\n    access_token: token,\n    user_id: payload.sub,\n    username: payload.username,\n    netid: payload.netid\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user_id');\n  localStorage.removeItem('username');\n  localStorage.removeItem('netid');\n  window.location.href = `${API_URL}/api/auth/cas/logout?redirect_uri=${encodeURIComponent(window.location.origin)}`;\n};\n\nexport const getToken = () => localStorage.getItem('token');\nexport const getUserId = () => localStorage.getItem('user_id');\nexport const getUsername = () => localStorage.getItem('username');\nexport const getNetId = () => localStorage.getItem('netid');\nexport const isAuthenticated = () => !!getToken();\n\nexport const signup = async (data: SignupData): Promise<{ message: string }> => {\n  const response = await fetch(`${API_URL}/api/auth/signup`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error('Signup failed');\n  }\n\n  return response.json();\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}