{"ast":null,"code":"// Handles fetching, creating, and updating listings (API calls)\nimport axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';export const getListings=async filters=>{const url=filters?`${API_URL}/api/listing${filters}`:`${API_URL}/api/listing`;const response=await axios.get(url);return response.data;};export const getListing=async id=>{const response=await axios.get(`${API_URL}/api/listing/${id}`);return response.data;};export const createListing=async data=>{const response=await axios.post(`${API_URL}/api/listing`,data);return response.data;};export const updateListing=async(id,data)=>{const response=await axios.put(`${API_URL}/api/listing/${id}`,data);return response.data;};export const updateListingStatus=async(id,status)=>{const response=await axios.patch(`${API_URL}/api/listings/${id}/status`,{status});return response.data;};export const deleteListing=async id=>{await axios.delete(`${API_URL}/api/listing/${id}`);};export const uploadImages=async files=>{const formData=new FormData();files.forEach(file=>{formData.append('images',file);});const response=await axios.post(`${API_URL}/api/upload`,formData,{headers:{'Content-Type':'multipart/form-data'}});return response.data.urls;};export const getCategories=async()=>{const response=await axios.get(`${API_URL}/api/categories`);return response.data;};export const getUserListings=async()=>{const response=await axios.get(`${API_URL}/api/listing/user`);return response.data;};export const requestToBuy=async(listingId,message,contactInfo)=>{const response=await axios.post(`${API_URL}/api/listings/${listingId}/request`,{message,contact_info:contactInfo});return response.data;};export const getUserPurchases=async()=>{const response=await axios.get(`${API_URL}/api/listing/purchases`);return response.data;};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","getListings","filters","url","response","get","data","getListing","id","createListing","post","updateListing","put","updateListingStatus","status","patch","deleteListing","delete","uploadImages","files","formData","FormData","forEach","file","append","headers","urls","getCategories","getUserListings","requestToBuy","listingId","message","contactInfo","contact_info","getUserPurchases"],"sources":["/Users/angel/Documents/Princeton/COS 333/tigerpop.github.io/frontend/src/services/listingService.ts"],"sourcesContent":["// Handles fetching, creating, and updating listings (API calls)\n\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nexport interface Listing {\n  id: number;\n  title: string;\n  description: string;\n  price: number;\n  category: string;\n  status: string;\n  user_id: number;\n  created_at: string;\n  images: string[];\n}\n\nexport interface CreateListingData {\n  title: string;\n  description: string;\n  price: number;\n  category: string;\n  images: string[];\n}\n\nexport interface ListingFilters {\n  max_price?: number;\n  min_price?: number;\n  category?: string;\n  condition?: string;\n  search?: string;\n  include_sold?: boolean;\n}\n\nexport const getListings = async (filters?: string): Promise<Listing[]> => {\n  const url = filters ? `${API_URL}/api/listing${filters}` : `${API_URL}/api/listing`;\n  const response = await axios.get<Listing[]>(url);\n  return response.data;\n};\n\nexport const getListing = async (id: number): Promise<Listing> => {\n  const response = await axios.get<Listing>(`${API_URL}/api/listing/${id}`);\n  return response.data;\n};\n\nexport const createListing = async (data: CreateListingData): Promise<Listing> => {\n  const response = await axios.post<Listing>(`${API_URL}/api/listing`, data);\n  return response.data;\n};\n\nexport const updateListing = async (id: number, data: Partial<Listing>): Promise<Listing> => {\n  const response = await axios.put<Listing>(`${API_URL}/api/listing/${id}`, data);\n  return response.data;\n};\n\nexport const updateListingStatus = async (id: number, status: 'available' | 'sold'): Promise<Listing> => {\n  const response = await axios.patch<Listing>(`${API_URL}/api/listings/${id}/status`, { status });\n  return response.data;\n};\n\nexport const deleteListing = async (id: number): Promise<void> => {\n  await axios.delete(`${API_URL}/api/listing/${id}`);\n};\n\nexport const uploadImages = async (files: File[]): Promise<string[]> => {\n  const formData = new FormData();\n  files.forEach(file => {\n    formData.append('images', file);\n  });\n\n  const response = await axios.post<{ urls: string[] }>(`${API_URL}/api/upload`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n  return response.data.urls;\n};\n\nexport const getCategories = async (): Promise<string[]> => {\n  const response = await axios.get<string[]>(`${API_URL}/api/categories`);\n  return response.data;\n};\n\nexport const getUserListings = async (): Promise<Listing[]> => {\n  const response = await axios.get<Listing[]>(`${API_URL}/api/listing/user`);\n  return response.data;\n};\n\nexport const requestToBuy = async (listingId: number, message: string, contactInfo: string): Promise<Listing> => {\n  const response = await axios.post<Listing>(`${API_URL}/api/listings/${listingId}/request`, {\n    message,\n    contact_info: contactInfo,\n  });\n  return response.data;\n};\n\nexport const getUserPurchases = async (): Promise<Listing[]> => {\n  const response = await axios.get<Listing[]>(`${API_URL}/api/listing/purchases`);\n  return response.data;\n};\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}