{"ast":null,"code":"// Handles fetching, creating, and updating listings (API calls)\n\nimport axios from 'axios';\nimport { getToken } from './authService';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Add axios interceptor to include JWT token in all requests\naxios.interceptors.request.use(config => {\n  const token = getToken();\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const getListings = async filters => {\n  const url = filters ? `${API_URL}/api/listing${filters}` : `${API_URL}/api/listing`;\n  const response = await axios.get(url);\n  return response.data;\n};\nexport const getListing = async id => {\n  const response = await axios.get(`${API_URL}/api/listing/${id}`);\n  return response.data;\n};\nexport const createListing = async data => {\n  const response = await axios.post(`${API_URL}/api/listing`, data);\n  return response.data;\n};\nexport const updateListing = async (id, data) => {\n  const response = await axios.put(`${API_URL}/api/listing/${id}`, data);\n  return response.data;\n};\nexport const updateListingStatus = async (id, status) => {\n  const response = await axios.patch(`${API_URL}/api/listing/${id}/status`, {\n    status\n  });\n  return response.data;\n};\nexport const deleteListing = async id => {\n  await axios.delete(`${API_URL}/api/listing/${id}`);\n};\nexport const uploadImages = async files => {\n  try {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('images', file);\n    });\n    const response = await axios.post(`${API_URL}/api/listing/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    if (!response.data.urls || !Array.isArray(response.data.urls)) {\n      throw new Error('Invalid response format from server');\n    }\n    return response.data.urls;\n  } catch (error) {\n    console.error('Error uploading images:', error);\n    throw error;\n  }\n};\nexport const getCategories = async () => {\n  const response = await axios.get(`${API_URL}/api/listing/categories`);\n  return response.data;\n};\nexport const getUserListings = async userId => {\n  const response = await axios.get(`${API_URL}/api/listing/user?user_id=${userId}`);\n  return response.data;\n};\nexport const requestToBuy = async listingId => {\n  try {\n    const response = await axios.post(`${API_URL}/api/listing/${listingId}/notify`);\n    return response.data;\n  } catch (error) {\n    console.error('Error sending notification:', error);\n    throw error;\n  }\n};\nexport const getUserPurchases = async () => {\n  const response = await axios.get(`${API_URL}/api/listing/purchases`);\n  return response.data;\n};","map":{"version":3,"names":["axios","getToken","API_URL","process","env","REACT_APP_API_URL","interceptors","request","use","config","token","headers","Authorization","error","Promise","reject","getListings","filters","url","response","get","data","getListing","id","createListing","post","updateListing","put","updateListingStatus","status","patch","deleteListing","delete","uploadImages","files","formData","FormData","forEach","file","append","urls","Array","isArray","Error","console","getCategories","getUserListings","userId","requestToBuy","listingId","getUserPurchases"],"sources":["/Users/angel/Documents/Princeton/COS 333/tigerpop.github.io-1/frontend/src/services/listingService.ts"],"sourcesContent":["// Handles fetching, creating, and updating listings (API calls)\n\nimport axios from 'axios';\nimport { getToken } from './authService';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\n// Add axios interceptor to include JWT token in all requests\naxios.interceptors.request.use(\n  (config) => {\n    const token = getToken();\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport interface Listing {\n  id: number;\n  title: string;\n  description: string;\n  price: number;\n  category: string;\n  status: string;\n  user_id: number;\n  user_netid: string;\n  created_at: string;\n  images: string[];\n}\n\nexport interface CreateListingData {\n  title: string;\n  description: string;\n  price: number;\n  category: string;\n  images: string[];\n  user_id: number;\n}\n\nexport interface ListingFilters {\n  max_price?: number;\n  min_price?: number;\n  category?: string;\n  condition?: string;\n  search?: string;\n  include_sold?: boolean;\n}\n\nexport const getListings = async (filters?: string): Promise<Listing[]> => {\n  const url = filters ? `${API_URL}/api/listing${filters}` : `${API_URL}/api/listing`;\n  const response = await axios.get<Listing[]>(url);\n  return response.data;\n};\n\nexport const getListing = async (id: number): Promise<Listing> => {\n  const response = await axios.get<Listing>(`${API_URL}/api/listing/${id}`);\n  return response.data;\n};\n\nexport const createListing = async (data: CreateListingData): Promise<Listing> => {\n  const response = await axios.post<Listing>(`${API_URL}/api/listing`, data);\n  return response.data;\n};\n\nexport const updateListing = async (id: number, data: Partial<Listing>): Promise<Listing> => {\n  const response = await axios.put<Listing>(`${API_URL}/api/listing/${id}`, data);\n  return response.data;\n};\n\nexport const updateListingStatus = async (id: number, status: 'available' | 'sold'): Promise<Listing> => {\n  const response = await axios.patch<Listing>(`${API_URL}/api/listing/${id}/status`, { status });\n  return response.data;\n};\n\nexport const deleteListing = async (id: number): Promise<void> => {\n  await axios.delete(`${API_URL}/api/listing/${id}`);\n};\n\nexport const uploadImages = async (files: File[]): Promise<string[]> => {\n  try {\n    const formData = new FormData();\n    files.forEach(file => {\n      formData.append('images', file);\n    });\n\n    const response = await axios.post<{ urls: string[] }>(`${API_URL}/api/listing/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    if (!response.data.urls || !Array.isArray(response.data.urls)) {\n      throw new Error('Invalid response format from server');\n    }\n\n    return response.data.urls;\n  } catch (error) {\n    console.error('Error uploading images:', error);\n    throw error;\n  }\n};\n\nexport const getCategories = async (): Promise<string[]> => {\n  const response = await axios.get<string[]>(`${API_URL}/api/listing/categories`);\n  return response.data;\n};\n\nexport const getUserListings = async (userId: string): Promise<Listing[]> => {\n  const response = await axios.get<Listing[]>(`${API_URL}/api/listing/user?user_id=${userId}`);\n  return response.data;\n};\n\nexport const requestToBuy = async (listingId: number): Promise<any> => {\n  try {\n    const response = await axios.post(`${API_URL}/api/listing/${listingId}/notify`);\n    return response.data;\n  } catch (error) {\n    console.error('Error sending notification:', error);\n    throw error;\n  }\n};\n\nexport const getUserPurchases = async (): Promise<Listing[]> => {\n  const response = await axios.get<Listing[]>(`${API_URL}/api/listing/purchases`);\n  return response.data;\n};\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}