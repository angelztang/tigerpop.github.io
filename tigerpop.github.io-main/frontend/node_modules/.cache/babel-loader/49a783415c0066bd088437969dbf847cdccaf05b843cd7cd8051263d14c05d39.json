{"ast":null,"code":"import{CAS_URL}from'../config';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';export const login=()=>{// Check if we already have a token\nconst token=localStorage.getItem('token');if(token){window.location.href='/';return;}// Get the current URL without any existing parameters\nconst currentUrl=window.location.origin+window.location.pathname;const redirectUri=encodeURIComponent(currentUrl);const serviceUrl=`${API_URL}/api/auth/cas/login?redirect_uri=${redirectUri}`;// Redirect to CAS login, which will handle Duo Security\nwindow.location.href=`${CAS_URL}/login?service=${encodeURIComponent(serviceUrl)}`;};export const handleCasCallback=token=>{// Store the token\nlocalStorage.setItem('token',token);// Decode the JWT token to get user info\nconst payload=JSON.parse(atob(token.split('.')[1]));localStorage.setItem('user_id',payload.sub);// Get netid from additional claims\nconst netid=payload.netid;localStorage.setItem('netid',netid);return{access_token:token,user_id:payload.sub,netid:netid};};export const logout=()=>{// Clear all stored data\nlocalStorage.removeItem('token');localStorage.removeItem('user_id');localStorage.removeItem('netid');// Redirect to login page\nwindow.location.href='/login';};export const getToken=()=>localStorage.getItem('token');export const getUserId=()=>localStorage.getItem('user_id');export const getNetid=()=>localStorage.getItem('netid');export const isAuthenticated=()=>{const token=getToken();return!!token;};export const signup=async data=>{const response=await fetch(`${API_URL}/signup`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error('Signup failed');}return response.json();};","map":{"version":3,"names":["CAS_URL","API_URL","process","env","REACT_APP_API_URL","login","token","localStorage","getItem","window","location","href","currentUrl","origin","pathname","redirectUri","encodeURIComponent","serviceUrl","handleCasCallback","setItem","payload","JSON","parse","atob","split","sub","netid","access_token","user_id","logout","removeItem","getToken","getUserId","getNetid","isAuthenticated","signup","data","response","fetch","method","headers","body","stringify","ok","Error","json"],"sources":["/Users/angel/Documents/Princeton/COS 333/tigerpop.github.io/frontend/src/services/authService.ts"],"sourcesContent":["import axios from 'axios';\nimport { CAS_URL } from '../config';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\nexport interface SignupData {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n  user_id: number;\n  netid: string;\n}\n\nexport const login = () => {\n  // Check if we already have a token\n  const token = localStorage.getItem('token');\n  if (token) {\n    window.location.href = '/';\n    return;\n  }\n\n  // Get the current URL without any existing parameters\n  const currentUrl = window.location.origin + window.location.pathname;\n  const redirectUri = encodeURIComponent(currentUrl);\n  const serviceUrl = `${API_URL}/api/auth/cas/login?redirect_uri=${redirectUri}`;\n  \n  // Redirect to CAS login, which will handle Duo Security\n  window.location.href = `${CAS_URL}/login?service=${encodeURIComponent(serviceUrl)}`;\n};\n\nexport const handleCasCallback = (token: string): AuthResponse => {\n  // Store the token\n  localStorage.setItem('token', token);\n  \n  // Decode the JWT token to get user info\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  localStorage.setItem('user_id', payload.sub);\n  \n  // Get netid from additional claims\n  const netid = payload.netid;\n  localStorage.setItem('netid', netid);\n  \n  return {\n    access_token: token,\n    user_id: payload.sub,\n    netid: netid\n  };\n};\n\nexport const logout = () => {\n  // Clear all stored data\n  localStorage.removeItem('token');\n  localStorage.removeItem('user_id');\n  localStorage.removeItem('netid');\n  \n  // Redirect to login page\n  window.location.href = '/login';\n};\n\nexport const getToken = () => localStorage.getItem('token');\n\nexport const getUserId = () => localStorage.getItem('user_id');\n\nexport const getNetid = () => localStorage.getItem('netid');\n\nexport const isAuthenticated = () => {\n  const token = getToken();\n  return !!token;\n};\n\nexport const signup = async (data: SignupData): Promise<{ message: string }> => {\n  const response = await fetch(`${API_URL}/signup`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error('Signup failed');\n  }\n\n  return response.json();\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}