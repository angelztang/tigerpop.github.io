{"ast":null,"code":"import { API_URL } from '../config';\nexport const login = async data => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n  const result = await response.json();\n  localStorage.setItem('token', result.access_token);\n  localStorage.setItem('user_id', result.user_id.toString());\n  localStorage.setItem('username', result.username);\n  return result;\n};\nexport const signup = async data => {\n  const response = await fetch(`${API_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Signup failed');\n  }\n  return response.json();\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user_id');\n  localStorage.removeItem('username');\n};\nexport const getToken = () => localStorage.getItem('token');\nexport const getUserId = () => localStorage.getItem('user_id');\nexport const getUsername = () => localStorage.getItem('username');\nexport const isAuthenticated = () => !!getToken();","map":{"version":3,"names":["API_URL","login","data","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","localStorage","setItem","access_token","user_id","toString","username","signup","logout","removeItem","getToken","getItem","getUserId","getUsername","isAuthenticated"],"sources":["/Users/hannahchoi/tigerpop.github.io/frontend/src/services/authService.ts"],"sourcesContent":["import { API_URL } from '../config';\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\nexport interface SignupData {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n  user_id: number;\n  username: string;\n}\n\nexport const login = async (data: LoginData): Promise<AuthResponse> => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error('Login failed');\n  }\n\n  const result = await response.json();\n  localStorage.setItem('token', result.access_token);\n  localStorage.setItem('user_id', result.user_id.toString());\n  localStorage.setItem('username', result.username);\n  return result;\n};\n\nexport const signup = async (data: SignupData): Promise<{ message: string }> => {\n  const response = await fetch(`${API_URL}/signup`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error('Signup failed');\n  }\n\n  return response.json();\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user_id');\n  localStorage.removeItem('username');\n};\n\nexport const getToken = () => localStorage.getItem('token');\nexport const getUserId = () => localStorage.getItem('user_id');\nexport const getUsername = () => localStorage.getItem('username');\nexport const isAuthenticated = () => !!getToken(); "],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AAmBnC,OAAO,MAAMC,KAAK,GAAG,MAAOC,IAAe,IAA4B;EACrE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,QAAQ,EAAE;IAC/CK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACjC;EAEA,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EACpCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACI,YAAY,CAAC;EAClDF,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEH,MAAM,CAACK,OAAO,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC1DJ,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,MAAM,CAACO,QAAQ,CAAC;EACjD,OAAOP,MAAM;AACf,CAAC;AAED,OAAO,MAAMQ,MAAM,GAAG,MAAOlB,IAAgB,IAAmC;EAC9E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,OAAO,SAAS,EAAE;IAChDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAClC;EAEA,OAAOR,QAAQ,CAACU,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMQ,MAAM,GAAGA,CAAA,KAAM;EAC1BP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;EAChCR,YAAY,CAACQ,UAAU,CAAC,SAAS,CAAC;EAClCR,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;AACrC,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;AAC3D,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAMX,YAAY,CAACU,OAAO,CAAC,SAAS,CAAC;AAC9D,OAAO,MAAME,WAAW,GAAGA,CAAA,KAAMZ,YAAY,CAACU,OAAO,CAAC,UAAU,CAAC;AACjE,OAAO,MAAMG,eAAe,GAAGA,CAAA,KAAM,CAAC,CAACJ,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}