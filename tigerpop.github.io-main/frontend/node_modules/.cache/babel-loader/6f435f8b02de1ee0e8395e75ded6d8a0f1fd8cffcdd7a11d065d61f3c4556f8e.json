{"ast":null,"code":"import { API_URL, CAS_URL } from '../config';\nexport const login = () => {\n  // Check if we already have a token\n  const token = localStorage.getItem('token');\n  if (token) {\n    window.location.href = '/';\n    return;\n  }\n\n  // Get the current URL without any existing parameters\n  const currentUrl = window.location.origin + window.location.pathname;\n  const redirectUri = encodeURIComponent(currentUrl);\n\n  // Redirect to CAS login, which will handle Duo Security\n  window.location.href = `${CAS_URL}/login?service=${encodeURIComponent(redirectUri)}`;\n};\nexport const handleCasCallback = token => {\n  // Store the token\n  localStorage.setItem('token', token);\n\n  // Decode the JWT token to get user info\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  localStorage.setItem('user_id', payload.sub);\n\n  // Get netid from additional claims\n  const netid = payload.netid;\n  localStorage.setItem('netid', netid);\n  return {\n    access_token: token,\n    user_id: payload.sub,\n    netid: netid\n  };\n};\nexport const logout = () => {\n  // Clear all stored data\n  localStorage.removeItem('token');\n  localStorage.removeItem('user_id');\n  localStorage.removeItem('netid');\n\n  // Redirect to login page\n  window.location.href = '/login';\n};\nexport const getToken = () => localStorage.getItem('token');\nexport const getUserId = () => localStorage.getItem('user_id');\nexport const getNetid = () => localStorage.getItem('netid');\nexport const isAuthenticated = () => {\n  const token = getToken();\n  return !!token;\n};\nexport const signup = async data => {\n  const response = await fetch(`${API_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    throw new Error('Signup failed');\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_URL","CAS_URL","login","token","localStorage","getItem","window","location","href","currentUrl","origin","pathname","redirectUri","encodeURIComponent","handleCasCallback","setItem","payload","JSON","parse","atob","split","sub","netid","access_token","user_id","logout","removeItem","getToken","getUserId","getNetid","isAuthenticated","signup","data","response","fetch","method","headers","body","stringify","ok","Error","json"],"sources":["/Users/angel/Documents/Princeton/COS 333/tigerpop.github.io/frontend/src/services/authService.ts"],"sourcesContent":["import { API_URL, CAS_URL } from '../config';\n\nexport interface LoginData {\n  username: string;\n  password: string;\n}\n\nexport interface SignupData {\n  username: string;\n  email: string;\n  password: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n  user_id: number;\n  netid: string;\n}\n\nexport const login = () => {\n  // Check if we already have a token\n  const token = localStorage.getItem('token');\n  if (token) {\n    window.location.href = '/';\n    return;\n  }\n\n  // Get the current URL without any existing parameters\n  const currentUrl = window.location.origin + window.location.pathname;\n  const redirectUri = encodeURIComponent(currentUrl);\n  \n  // Redirect to CAS login, which will handle Duo Security\n  window.location.href = `${CAS_URL}/login?service=${encodeURIComponent(redirectUri)}`;\n};\n\nexport const handleCasCallback = (token: string): AuthResponse => {\n  // Store the token\n  localStorage.setItem('token', token);\n  \n  // Decode the JWT token to get user info\n  const payload = JSON.parse(atob(token.split('.')[1]));\n  localStorage.setItem('user_id', payload.sub);\n  \n  // Get netid from additional claims\n  const netid = payload.netid;\n  localStorage.setItem('netid', netid);\n  \n  return {\n    access_token: token,\n    user_id: payload.sub,\n    netid: netid\n  };\n};\n\nexport const logout = () => {\n  // Clear all stored data\n  localStorage.removeItem('token');\n  localStorage.removeItem('user_id');\n  localStorage.removeItem('netid');\n  \n  // Redirect to login page\n  window.location.href = '/login';\n};\n\nexport const getToken = () => localStorage.getItem('token');\n\nexport const getUserId = () => localStorage.getItem('user_id');\n\nexport const getNetid = () => localStorage.getItem('netid');\n\nexport const isAuthenticated = () => {\n  const token = getToken();\n  return !!token;\n};\n\nexport const signup = async (data: SignupData): Promise<{ message: string }> => {\n  const response = await fetch(`${API_URL}/signup`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    throw new Error('Signup failed');\n  }\n\n  return response.json();\n}; "],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,WAAW;AAmB5C,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EACzB;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC1B;EACF;;EAEA;EACA,MAAMC,UAAU,GAAGH,MAAM,CAACC,QAAQ,CAACG,MAAM,GAAGJ,MAAM,CAACC,QAAQ,CAACI,QAAQ;EACpE,MAAMC,WAAW,GAAGC,kBAAkB,CAACJ,UAAU,CAAC;;EAElD;EACAH,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAGP,OAAO,kBAAkBY,kBAAkB,CAACD,WAAW,CAAC,EAAE;AACtF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAIX,KAAa,IAAmB;EAChE;EACAC,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;;EAEpC;EACA,MAAMa,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAAChB,KAAK,CAACiB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrDhB,YAAY,CAACW,OAAO,CAAC,SAAS,EAAEC,OAAO,CAACK,GAAG,CAAC;;EAE5C;EACA,MAAMC,KAAK,GAAGN,OAAO,CAACM,KAAK;EAC3BlB,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEO,KAAK,CAAC;EAEpC,OAAO;IACLC,YAAY,EAAEpB,KAAK;IACnBqB,OAAO,EAAER,OAAO,CAACK,GAAG;IACpBC,KAAK,EAAEA;EACT,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,MAAM,GAAGA,CAAA,KAAM;EAC1B;EACArB,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;EAChCtB,YAAY,CAACsB,UAAU,CAAC,SAAS,CAAC;EAClCtB,YAAY,CAACsB,UAAU,CAAC,OAAO,CAAC;;EAEhC;EACApB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;AACjC,CAAC;AAED,OAAO,MAAMmB,QAAQ,GAAGA,CAAA,KAAMvB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3D,OAAO,MAAMuB,SAAS,GAAGA,CAAA,KAAMxB,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;AAE9D,OAAO,MAAMwB,QAAQ,GAAGA,CAAA,KAAMzB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAE3D,OAAO,MAAMyB,eAAe,GAAGA,CAAA,KAAM;EACnC,MAAM3B,KAAK,GAAGwB,QAAQ,CAAC,CAAC;EACxB,OAAO,CAAC,CAACxB,KAAK;AAChB,CAAC;AAED,OAAO,MAAM4B,MAAM,GAAG,MAAOC,IAAgB,IAAmC;EAC9E,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGlC,OAAO,SAAS,EAAE;IAChDmC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEpB,IAAI,CAACqB,SAAS,CAACN,IAAI;EAC3B,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACM,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAClC;EAEA,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}